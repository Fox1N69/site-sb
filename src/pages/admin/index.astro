---
import Layout from "@/layouts/Layout.astro";
import "@/assets/styles/admin.scss";
import axios from "axios";

interface Post {
  id: number;
  preview_image: string;
  full_image: string;
  title: string;
  description: string;
  text: string;
}

const response = await axios.get<Post[]>("http://127.0.0.1:4000/post/");
const data: Post[] = response.data;
---

<script>
    const token = localStorage.getItem("token");

    if (!token) {
        alert("Для доступа к этой странице необходимо войти в систему.");
        window.location.href = "/admin/login"; // Перенаправление на страницу логина
    } else {
        const protectedContent = document.getElementById("protected-content");
        if (protectedContent) {
            protectedContent.style.display = "block"; // Показываем контент
        }
    }

    function logout() {
        localStorage.removeItem("token"); // Удаляем токен из localStorage
        alert("Вы вышли из системы.");
        window.location.href = "/admin/login"; // Перенаправление на страницу логина
    }

    // Обработчик события для кнопки выхода
    window.onload = () => {
        const logoutButton = document.getElementById("logout-button");
        if (logoutButton) {
            logoutButton.addEventListener("click", logout);
        }


        const deleteButtons = document.querySelectorAll(".delete-button");
        deleteButtons.forEach((button) => {
            const postId = button.id.split("-")[1]; // Извлекаем ID из ID кнопки
            button.addEventListener("click", () => deletePost(postId));
        });

        // Добавляем обработчик для отправки формы
        const postForm = document.getElementById(
            "post-form",
        ) as HTMLFormElement; // Приведение к HTMLFormElement
        if (postForm) {
            postForm.addEventListener("submit", async (event) => {
                event.preventDefault(); // Отменяем стандартное поведение формы

                // Собираем данные формы
                const formData = new FormData(postForm);
                const data = {
                    title: formData.get("title"),
                    preview_image: formData.get("preview_image"),
                    full_image: formData.get("full_image"),
                    description: formData.get("description"),
                    text: formData.get("text"),
                };

                try {
                    const response = await fetch(
                        "http://89.104.70.77:4000/admin/post/create",
                        {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                                Authorization: `Bearer ${token}`, // Добавляем токен авторизации, если нужно
                            },
                            body: JSON.stringify(data),
                        },
                    );

                    if (response.ok) {
                        alert("Новость успешно создана!");
                        postForm.reset(); // Теперь reset доступно
                    } else {
                        alert(
                            "Ошибка при создании новости: " +
                                response.statusText,
                        );
                    }
                } catch (error) {
                    console.error("Ошибка:", error);
                    alert("Произошла ошибка при отправке данных.");
                }
            });
        }
    };

    async function deletePost(postId) {
        try {
            const response = await fetch(`http://89.104.70.77:4000/admin/post/delete/${postId}`, {
                method: "DELETE",
                headers: {
                    Authorization: `Bearer ${token}`, // Добавляем токен авторизации
                },
            });

            if (response.ok) {
                alert("Новость успешно удалена!");
            } else {
                alert("Ошибка при удалении новости: " + response.statusText);
            }
        } catch (error) {
            console.error("Ошибка:", error);
            alert("Произошла ошибка при удалении новости.");
        }
    }
</script>

<Layout title="admin">
    <div style="display: none;" id="protected-content">
        <header class="header">
            <nav class="navigation">
                <ul class="navigation__list">
                    <li><a href="/news">Новости</a></li>
                    <li><a href="/documents">Документы</a></li>
                    <li><a href="/investors">Партнеры</a></li>
                    <button id="logout-button">Выход</button>
                </ul>
                <span class="navigation__underline"></span>
            </nav>
        </header>
        <div class="header_info">
            <h1>Страница администратора</h1>
            <p>
                Это защищённое содержание, доступное только для администраторов.
            </p>
            <p>
                Данная страница еще в разработке, но уже есть возможность
                выкладывать новости
            </p>
        </div>

        <div class="container">
            <div class="news_form">
                <form id="post-form">
                    <h2>Создание новости</h2>
                    <label>
                        Заголовок:
                        <input type="text" name="title" required />
                    </label>
                    <label>
                        Превью изображение URL:
                        <input type="text" name="preview_image" required />
                    </label>
                    <label>
                        Полное изображение URL:
                        <input type="text" name="full_image" />
                    </label>
                    <label>
                        Описание:
                        <textarea name="description" required></textarea>
                    </label>
                    <label>
                        Текст:
                        <textarea name="text" required></textarea>
                    </label>
                    <button type="submit">Создать новость</button>
                </form>
            </div>

            <div class="news_list">
                <h2>Удаленте новостей</h3>
                <div class="news">
                {
                    data.map((item) => (
                    <ul key={item.id}>
                        <li>{item.title}</li>
                        <button id={`delButton-${item.id}`} class="delete-button">
                            <img src="delete_icon.svg" alt="">
                        </button>
                    </ul>
                    ))
                }
                </div>
            </div>
        </div>
    </div>
</Layout>
